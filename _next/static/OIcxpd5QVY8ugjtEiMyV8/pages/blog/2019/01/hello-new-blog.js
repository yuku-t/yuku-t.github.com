(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{391:function(e,t,n){__NEXT_REGISTER_PAGE("/blog/2019/01/hello-new-blog",function(){return e.exports=n(404),{page:e.exports.default}})},404:function(e,t,n){"use strict";n.r(t);var a=n(3),o=n.n(a),r=n(0),p=n.n(r),c=n(6),m=n(1);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function i(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function u(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var b=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=u(this,f(t).call(this,e))).layout=null,n}var n,a,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(t,p.a.Component),n=t,(a=[{key:"render",value:function(){var e=this.props,t=e.components;l(e,["components"]);return p.a.createElement(m.MDXTag,{name:"wrapper",components:t},p.a.createElement(m.MDXTag,{name:"p",components:t},"新しくブログを自作する過程で技術的、経済的あるいは時間的な制約のもとにいろいろな選択をしました。この記事では将来自分がメンテナンス時に読むことを想定して、どういった制約があってその中でどういった選択をしたのか書きます。"),p.a.createElement(m.MDXTag,{name:"p",components:t},"注意: これが 2019 年にブログを自作するのに最適な構成であると主張するものではありません。"),p.a.createElement(m.MDXTag,{name:"h2",components:t},"TL;DR"),p.a.createElement(m.MDXTag,{name:"ul",components:t},p.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"転職後にキャッチアップした Web 技術を実践したり、レコメンデーション機能を実装する場所が欲しくてブログを作ることにした。"),p.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://pages.github.com/"}},"GitHub Pages")," 上にデプロイされており、 ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://nextjs.org/"}},"Next.js")," をフレームワークとして使っている。記事は Markdown の中に JSX を書けるようにした ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://mdxjs.com/"}},"MDX")," 記法を使って書いている。")),p.a.createElement(m.MDXTag,{name:"h2",components:t},"背景、モチベーション"),p.a.createElement(m.MDXTag,{name:"p",components:t},"そもそも 2019 年にもなって何故ブログを自作する必要があるのでしょう。ブログを持つことが目的ならそのためのサービスを使えばいいのだから、実装しそれをメンテナンスしていくことそれ自体にも意味があるのは言うまでもありません。"),p.a.createElement(m.MDXTag,{name:"p",components:t},"長年 Web アプリケーションエンジニアとして仕事してきましたが、1 月末で転職し次の職場では若干 Web から遠ざかる予定でいます。ですが Web 標準や周辺技術のキャッチアップは続けたいと考えていて、そのキャッチアップした知識を実践する場所が欲しいと思い、このブログを作ることにしました。ブログサービスは便利な半面、自分で触れる領域に制約があるのでこの目的には合いません。"),p.a.createElement(m.MDXTag,{name:"p",components:t},"また 2 月からはデータサイエンスの立場から検索やレコメンデーションといった領域に取り組みます。これらの領域にも静的な文書や画像、表を用いた書籍やブログはたくさんありますが、せっかく自分は Web の技術を持っているのだからそれをいかして動的に内容を変更できるようなコンテンツを作れないかと考えました。そのためには自由に JavaScript を実行できる環境が必要で、かつそのコードを git 管理できなければいけません。また学んだレコメンデーションや検索の知識そのものを実践する場所としても使っていく予定です。"),p.a.createElement(m.MDXTag,{name:"h2",components:t},"制約"),p.a.createElement(m.MDXTag,{name:"p",components:t},"有給消化期間中に余裕を持って構築し、それでいて今後もメンテナンスし続けられることが重要です。そのためには今回のために一から新しい技術を学ぶのではなく、今自分の手元にある知識を活かせるものでなければ実現は難しいでしょう。それでいてすぐには廃れない、廃れたとしても乗り換えが容易な構成であることが望ましいです。"),p.a.createElement(m.MDXTag,{name:"p",components:t},"運用を容易にするためにもシンプルにサーバサイドは静的なファイルをホスティングするだけにします。かといって生の HTML / JavaScript / CSS を書いていくのはメンテナンスの観点からも無理があるので何かしらの静的サイトジェネレータは必要です。ブログなので文章がメインだけど、リッチコンテンツを組み込んでいきたいので文書と JavaScript の統合にサポートが必要です。"),p.a.createElement(m.MDXTag,{name:"p",components:t},"2019 年なので静的サイトと言えども HTTPS は必須としました。"),p.a.createElement(m.MDXTag,{name:"h2",components:t},"構成"),p.a.createElement(m.MDXTag,{name:"p",components:t},"以上を踏まえて次のような構成にしました:"),p.a.createElement(m.MDXTag,{name:"ul",components:t},p.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://pages.github.com/"}},"GitHub Pages")," でホスティング"),p.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://travis-ci.org/"}},"Travis CI")," の ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://docs.travis-ci.com/user/deployment/pages/"}},"GitHub Pages Deployment")," を使ってデプロイ"),p.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"静的サイトジェネレータとして ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://nextjs.org/"}},"Next.js")," を使う"),p.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"ブログコンテンツは ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://mdxjs.com/"}},"MDX")," で記述する")),p.a.createElement(m.MDXTag,{name:"h3",components:t},"ホスティングサービス"),p.a.createElement(m.MDXTag,{name:"p",components:t},"GitHub Pages は GitHub と統合された静的ファイルのホスティングサービスです。",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://blog.github.com/2018-05-01-github-pages-custom-domains-https/"}},"最近ついにカスタムドメインも HTTPS がサポートされました"),"。"),p.a.createElement(m.MDXTag,{name:"p",components:t},p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://www.netlify.com/"}},"Netlify")," など静的なファイルをホスティングするだけなら他にもいろいろな選択肢がありますが、 GitHub の他のプロジェクトページもブログと同じドメインでホスティングしたかったのと単純に使い慣れているので GitHub Pages を使うことにしました。"),p.a.createElement(m.MDXTag,{name:"h3",components:t},"デプロイ自動化"),p.a.createElement(m.MDXTag,{name:"p",components:t},"GitHub Pages を使うのでデプロイは GitHub への git push で行われます。この作業を自動化するために CI サービスとして Travis CI と ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://circleci.com/"}},"CircleCI")," を検討しました。どちらかといえば使い慣れているのは CircleCI でしたが、 GitHub Pages Deployment というそのものズバリの機能が使えるので Travis CI を採用しました。"),p.a.createElement(m.MDXTag,{name:"p",components:t},"GitHub の yuku/yuku.github.io リポジトリの workspace ブランチに push すると Travis CI から自動的にデプロイされます。"),p.a.createElement(m.MDXTag,{name:"h3",components:t},"静的サイトジェネレータ"),p.a.createElement(m.MDXTag,{name:"p",components:t},"手元の知識を活かすためにクライアントサイド JavaScript では ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://reactjs.org/"}},"React")," を使うことを決めていたので ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://nextjs.org/"}},"Next.js")," と ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://www.gatsbyjs.org/"}},"Gatsby")," を検討しました。"),p.a.createElement(m.MDXTag,{name:"p",components:t},"Gatsby は静的サイトにより特化している雰囲気がある点が魅力的でしたが、 Next.js も static export 機能を使って ",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://nextjs.org"}},"https://nextjs.org")," を",p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://www.reddit.com/r/reactjs/comments/992n2r/next_vs_gatsby/e4lrffl/"}},"作っている"),"ので突然サポートを終了するとは考えにくく、結局"),p.a.createElement(m.MDXTag,{name:"ul",components:t},p.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"過去に少し触ったことがある"),p.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"ドキュメントが読みやすかった")),p.a.createElement(m.MDXTag,{name:"p",components:t},"という理由で Next.js にしました。"),p.a.createElement(m.MDXTag,{name:"p",components:t},p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://www.npmtrends.com/gatsby-vs-next"}},p.a.createElement(m.MDXTag,{name:"img",components:t,parentName:"a",props:{src:"/static/images/2019/01/next-vs-gatsby.png",alt:"Next.js vs Gatsby"}}))),p.a.createElement(m.MDXTag,{name:"p",components:t},"npm パッケージのダウンロード数や開発の活発さの比較では両者の違いはあまりなさそうでした。"),p.a.createElement(m.MDXTag,{name:"h3",components:t},"MDX"),p.a.createElement(m.MDXTag,{name:"p",components:t},"ブログコンテンツの中で JavaScript を使おうとすると、本文のテキストデータと JavaScript のコードをどのように連携されるのかが問題になります。記事自体は Markdown で書くとして、 Markdown の中で ",p.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"<script>")," を書くの避けたいです。"),p.a.createElement(m.MDXTag,{name:"p",components:t},p.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://mdxjs.com/"}},"MDX")," は Markdown の中で JSX を使えうようにしたフォーマットです。簡単な話が JSX 記法が書かれた場所に対応する React コンポーネントが自動的にマウントされます。広く普及しているツールではありませんが、 Next.js を開発している ZEIT が開発しているのでその点は安心感があります。仮に MDX 記法が仮に使えなくなったとしてもそれまで JSX を書いていた場所に DOM 要素を作り、それに対して React コンポーネントを明示的にマウントするようにすればいいだけなので移行するのは比較的簡単だと判断しました。"),p.a.createElement(m.MDXTag,{name:"h2",components:t},"おわりに"),p.a.createElement(m.MDXTag,{name:"p",components:t},"ブログを自作することにした理由と、選択したツールについて簡単にまとめました。冒頭でも書いたように、これが万人に対しておすすめできる構成とは考えていませんが、未来の自分を含むどこかの誰かの参考になれば幸いです。"))}}])&&i(n.prototype,a),o&&i(n,o),t}();function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t,n,a,o,r,p){try{var c=e[r](p),m=c.value}catch(e){return void n(e)}c.done?t(m):Promise.resolve(m).then(a,o)}function T(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function E(e,t){return!t||"object"!==h(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function X(e,t){return(X=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n.d(t,"default",function(){return D});var D=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),E(this,M(t).apply(this,arguments))}var a,r,m;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&X(e,t)}(t,p.a.Component),a=t,r=[{key:"render",value:function(){return p.a.createElement(c.a,{meta:this.props.meta},p.a.createElement(b,null))}}],m=[{key:"getInitialProps",value:function(){var e,t=(e=o.a.mark(function e(){var t,a;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=n(19),a=t.entries,e.abrupt("return",{meta:a["blog/2019/01/hello-new-blog"]});case 2:case"end":return e.stop()}},e)}),function(){var t=this,n=arguments;return new Promise(function(a,o){var r=e.apply(t,n);function p(e){y(r,a,o,p,c,"next",e)}function c(e){y(r,a,o,p,c,"throw",e)}p(void 0)})});return function(){return t.apply(this,arguments)}}()}],r&&T(a.prototype,r),m&&T(a,m),t}()}},[[391,1,0,2]]]);