(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{389:function(t,e,a){__NEXT_REGISTER_PAGE("/blog/2019/01/hello-new-blog",function(){return t.exports=a(409),{page:t.exports.default}})},409:function(t,e,a){"use strict";a.r(e);var n=a(3),r=a.n(n),c=a(1),o=a.n(c),l=a(5),p=a(0);function u(){return(u=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t}).apply(this,arguments)}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},c=Object.keys(t);for(n=0;n<c.length;n++)a=c[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(n=0;n<c.length;n++)a=c[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s={},b="wrapper";function f(t){var e=t.components,a=i(t,["components"]);return Object(p.a)(b,u({},s,a,{components:e,mdxType:"MDXLayout"}),Object(p.a)("p",null,"新しくブログを自作する過程で技術的、経済的あるいは時間的な制約のもとにいろいろな選択をしました。この記事では将来自分がメンテナンス時に読むことを想定して、どういった制約があってその中でどういった選択をしたのか書きます。"),Object(p.a)("p",null,"注意: これが 2019 年にブログを自作するのに最適な構成であると主張するものではありません。"),Object(p.a)("h2",null,"TL;DR"),Object(p.a)("ul",null,Object(p.a)("li",{parentName:"ul"},"転職後にキャッチアップした Web 技術を実践したり、レコメンデーション機能を実装する場所が欲しくてブログを作ることにした。"),Object(p.a)("li",{parentName:"ul"},Object(p.a)("a",u({parentName:"li"},{href:"https://pages.github.com/"}),"GitHub Pages")," 上にデプロイされており、 ",Object(p.a)("a",u({parentName:"li"},{href:"https://nextjs.org/"}),"Next.js")," をフレームワークとして使っている。記事は Markdown の中に JSX を書けるようにした ",Object(p.a)("a",u({parentName:"li"},{href:"https://mdxjs.com/"}),"MDX")," 記法を使って書いている。")),Object(p.a)("h2",null,"背景、モチベーション"),Object(p.a)("p",null,"そもそも 2019 年にもなって何故ブログを自作する必要があるのでしょう。ブログを持つことが目的ならそのためのサービスを使えばいいのだから、実装しそれをメンテナンスしていくことそれ自体にも意味があるのは言うまでもありません。"),Object(p.a)("p",null,"長年 Web アプリケーションエンジニアとして仕事してきましたが、1 月末で転職し次の職場では若干 Web から遠ざかる予定でいます。ですが Web 標準や周辺技術のキャッチアップは続けたいと考えていて、そのキャッチアップした知識を実践する場所が欲しいと思い、このブログを作ることにしました。ブログサービスは便利な半面、自分で触れる領域に制約があるのでこの目的には合いません。"),Object(p.a)("p",null,"また 2 月からはデータサイエンスの立場から検索やレコメンデーションといった領域に取り組みます。これらの領域にも静的な文書や画像、表を用いた書籍やブログはたくさんありますが、せっかく自分は Web の技術を持っているのだからそれをいかして動的に内容を変更できるようなコンテンツを作れないかと考えました。そのためには自由に JavaScript を実行できる環境が必要で、かつそのコードを git 管理できなければいけません。また学んだレコメンデーションや検索の知識そのものを実践する場所としても使っていく予定です。"),Object(p.a)("h2",null,"制約"),Object(p.a)("p",null,"有給消化期間中に余裕を持って構築し、それでいて今後もメンテナンスし続けられることが重要です。そのためには今回のために一から新しい技術を学ぶのではなく、今自分の手元にある知識を活かせるものでなければ実現は難しいでしょう。それでいてすぐには廃れない、廃れたとしても乗り換えが容易な構成であることが望ましいです。"),Object(p.a)("p",null,"運用を容易にするためにもシンプルにサーバサイドは静的なファイルをホスティングするだけにします。かといって生の HTML / JavaScript / CSS を書いていくのはメンテナンスの観点からも無理があるので何かしらの静的サイトジェネレータは必要です。ブログなので文章がメインだけど、リッチコンテンツを組み込んでいきたいので文書と JavaScript の統合にサポートが必要です。"),Object(p.a)("p",null,"2019 年なので静的サイトと言えども HTTPS は必須としました。"),Object(p.a)("h2",null,"構成"),Object(p.a)("p",null,"以上を踏まえて次のような構成にしました:"),Object(p.a)("ul",null,Object(p.a)("li",{parentName:"ul"},Object(p.a)("a",u({parentName:"li"},{href:"https://pages.github.com/"}),"GitHub Pages")," でホスティング"),Object(p.a)("li",{parentName:"ul"},Object(p.a)("a",u({parentName:"li"},{href:"https://travis-ci.org/"}),"Travis CI")," の ",Object(p.a)("a",u({parentName:"li"},{href:"https://docs.travis-ci.com/user/deployment/pages/"}),"GitHub Pages Deployment")," を使ってデプロイ"),Object(p.a)("li",{parentName:"ul"},"静的サイトジェネレータとして ",Object(p.a)("a",u({parentName:"li"},{href:"https://nextjs.org/"}),"Next.js")," を使う"),Object(p.a)("li",{parentName:"ul"},"ブログコンテンツは ",Object(p.a)("a",u({parentName:"li"},{href:"https://mdxjs.com/"}),"MDX")," で記述する")),Object(p.a)("h3",null,"ホスティングサービス"),Object(p.a)("p",null,"GitHub Pages は GitHub と統合された静的ファイルのホスティングサービスです。",Object(p.a)("a",u({parentName:"p"},{href:"https://blog.github.com/2018-05-01-github-pages-custom-domains-https/"}),"最近ついにカスタムドメインも HTTPS がサポートされました"),"。"),Object(p.a)("p",null,Object(p.a)("a",u({parentName:"p"},{href:"https://www.netlify.com/"}),"Netlify")," など静的なファイルをホスティングするだけなら他にもいろいろな選択肢がありますが、 GitHub の他のプロジェクトページもブログと同じドメインでホスティングしたかったのと単純に使い慣れているので GitHub Pages を使うことにしました。"),Object(p.a)("h3",null,"デプロイ自動化"),Object(p.a)("p",null,"GitHub Pages を使うのでデプロイは GitHub への git push で行われます。この作業を自動化するために CI サービスとして Travis CI と ",Object(p.a)("a",u({parentName:"p"},{href:"https://circleci.com/"}),"CircleCI")," を検討しました。どちらかといえば使い慣れているのは CircleCI でしたが、 GitHub Pages Deployment というそのものズバリの機能が使えるので Travis CI を採用しました。"),Object(p.a)("p",null,"GitHub の yuku/yuku.github.io リポジトリの workspace ブランチに push すると Travis CI から自動的にデプロイされます。"),Object(p.a)("h3",null,"静的サイトジェネレータ"),Object(p.a)("p",null,"手元の知識を活かすためにクライアントサイド JavaScript では ",Object(p.a)("a",u({parentName:"p"},{href:"https://reactjs.org/"}),"React")," を使うことを決めていたので ",Object(p.a)("a",u({parentName:"p"},{href:"https://nextjs.org/"}),"Next.js")," と ",Object(p.a)("a",u({parentName:"p"},{href:"https://www.gatsbyjs.org/"}),"Gatsby")," を検討しました。"),Object(p.a)("p",null,"Gatsby は静的サイトにより特化している雰囲気がある点が魅力的でしたが、 Next.js も static export 機能を使って ",Object(p.a)("a",u({parentName:"p"},{href:"https://nextjs.org"}),"https://nextjs.org")," を",Object(p.a)("a",u({parentName:"p"},{href:"https://www.reddit.com/r/reactjs/comments/992n2r/next_vs_gatsby/e4lrffl/"}),"作っている"),"ので突然サポートを終了するとは考えにくく、結局"),Object(p.a)("ul",null,Object(p.a)("li",{parentName:"ul"},"過去に少し触ったことがある"),Object(p.a)("li",{parentName:"ul"},"ドキュメントが読みやすかった")),Object(p.a)("p",null,"という理由で Next.js にしました。"),Object(p.a)("p",null,Object(p.a)("a",u({parentName:"p"},{href:"https://www.npmtrends.com/gatsby-vs-next"}),Object(p.a)("img",u({parentName:"a"},{src:"/static/images/2019/01/next-vs-gatsby.png",alt:"Next.js vs Gatsby"})))),Object(p.a)("p",null,"npm パッケージのダウンロード数や開発の活発さの比較では両者の違いはあまりなさそうでした。"),Object(p.a)("h3",null,"MDX"),Object(p.a)("p",null,"ブログコンテンツの中で JavaScript を使おうとすると、本文のテキストデータと JavaScript のコードをどのように連携されるのかが問題になります。記事自体は Markdown で書くとして、 Markdown の中で ",Object(p.a)("inlineCode",{parentName:"p"},"<script>")," を書くの避けたいです。"),Object(p.a)("p",null,Object(p.a)("a",u({parentName:"p"},{href:"https://mdxjs.com/"}),"MDX")," は Markdown の中で JSX を使えうようにしたフォーマットです。簡単な話が JSX 記法が書かれた場所に対応する React コンポーネントが自動的にマウントされます。広く普及しているツールではありませんが、 Next.js を開発している ZEIT が開発しているのでその点は安心感があります。仮に MDX 記法が仮に使えなくなったとしてもそれまで JSX を書いていた場所に DOM 要素を作り、それに対して React コンポーネントを明示的にマウントするようにすればいいだけなので移行するのは比較的簡単だと判断しました。"),Object(p.a)("h2",null,"おわりに"),Object(p.a)("p",null,"ブログを自作することにした理由と、選択したツールについて簡単にまとめました。冒頭でも書いたように、これが万人に対しておすすめできる構成とは考えていませんが、未来の自分を含むどこかの誰かの参考になれば幸いです。"))}function j(t){return(j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function O(t,e,a,n,r,c,o){try{var l=t[c](o),p=l.value}catch(t){return void a(t)}l.done?e(p):Promise.resolve(p).then(n,r)}function h(t,e){for(var a=0;a<e.length;a++){var n=e[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function m(t,e){return!e||"object"!==j(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function y(t){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function g(t,e){return(g=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}f.isMDXComponent=!0,a.d(e,"default",function(){return v});var v=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),m(this,y(e).apply(this,arguments))}var n,c,p;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&g(t,e)}(e,o.a.Component),n=e,c=[{key:"render",value:function(){return o.a.createElement(l.a,{meta:this.props.meta},o.a.createElement(f,null))}}],p=[{key:"getInitialProps",value:function(){var t,e=(t=r.a.mark(function t(){var e,n;return r.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return e=a(12),n=e.entries,t.abrupt("return",{meta:n["blog/2019/01/hello-new-blog"]});case 2:case"end":return t.stop()}},t)}),function(){var e=this,a=arguments;return new Promise(function(n,r){var c=t.apply(e,a);function o(t){O(c,n,r,o,l,"next",t)}function l(t){O(c,n,r,o,l,"throw",t)}o(void 0)})});return function(){return e.apply(this,arguments)}}()}],c&&h(n.prototype,c),p&&h(n,p),e}()}},[[389,1,0,2]]]);